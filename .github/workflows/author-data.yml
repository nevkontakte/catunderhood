name: Check and save author data

# Check if the new author had updated data in the profile, and once it looks updated - collect image and description.
on: 
  schedule:
    - cron: "0 * * * *"
  push:
    branches:
      - 'master'
    paths:
      - 'authors.js'
  workflow_dispatch:
    
jobs:
  check_author_data_exists:
    runs-on: ubuntu-latest

    outputs:
      result: ${{ env.AUTHOR_DATA_EXISTS }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: "8"
          
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm install

      - name: CHeck if author data exists
        run: |
          npm run check:author:data
        env: 
            TWITTER_ACCESS_TOKEN_KEY: ${{ secrets.TWITTER_ACCESS_TOKEN_KEY }}
            TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
            TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
            TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
            
            
  check_author_ready:
    runs-on: ubuntu-latest
    needs: check_author_data_exists
    if: needs.check_author_data_exists.outputs.result != 'true'

    outputs:
      result: ${{ env.AUTHOR_READY }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: "8"
          
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm install

    
      - name: CHeck if author had started shift
        run: |
          npm run check:author:ready
        env: 
            TWITTER_ACCESS_TOKEN_KEY: ${{ secrets.TWITTER_ACCESS_TOKEN_KEY }}
            TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
            TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
            TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
      
        
  save_author_data:
    runs-on: ubuntu-latest
    needs: check_author_ready
    if: needs.check_author_ready.outputs.result == 'true'
    env: 
        TWITTER_ACCESS_TOKEN_KEY: ${{ secrets.TWITTER_ACCESS_TOKEN_KEY }}
        TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
        TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
        TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: "8"
          
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm install

      - name: Save start data
        run: npm run save:author:data
      
      
      - name: Commit user data
        run: |
          git add dump/**
          git reset -- package-lock.json
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m 'save user data'
          git push
        
      - name: Build product
        run: npm run build
                    
      - name: Deploy product
        uses: JamesIves/github-pages-deploy-action@4.1.0
        with:
          folder: ./dist
          branch: gh-pages                    
     